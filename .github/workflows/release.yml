name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      # Use a sanitized image repo name (repo name ends with '-' which is invalid for Docker)
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/maio
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps and train (bake model)
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          python -m maio.train --version ${GITHUB_REF_NAME#v} --random-state 42 --test-size 0.2 --out-dir model
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Smoke test container
        run: |
          docker run -d --rm -p 8080:8080 --name api ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          # wait for health
          for i in {1..20}; do curl -sSf http://localhost:8080/health && break || sleep 2; done
          curl -sSf -X POST http://localhost:8080/predict -H 'Content-Type: application/json' -d '{"age":0.02, "sex":-0.044, "bmi":0.06, "bp":-0.03, "s1":-0.02, "s2":0.03, "s3":-0.02, "s4":0.02, "s5":0.02, "s6":-0.001 }'
          docker stop api
      - name: Read metrics
        id: metrics
        run: |
          python - <<'PY' > rmse.txt
import json
with open('model/metrics.json','r') as f:
    m=json.load(f)
print(m.get('rmse',''))
PY
          echo "rmse=$(cat rmse.txt)" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}
            
            ## Metrics
            - RMSE: ${{ steps.metrics.outputs.rmse }}

            See CHANGELOG.md for details.
          files: |
            model/metrics.json
            model/model.joblib
            model/feature_names.json

